{"ast":null,"code":"var _jsxFileName = \"/Users/dangnhat/Documents/NLCS1/BlogReact/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Post from './Post';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostList() {\n  _s();\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    async function fetchNews() {\n      try {\n        const response = await axios.get('http://localhost:3001/api/v1/news');\n        setNews(response.data.data.news);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      }\n    }\n    fetchNews();\n  }, []);\n  const handleDeletePost = async postId => {\n    try {\n      // Gửi yêu cầu DELETE đến API endpoint để xóa bài post\n      await axios.delete(`http://localhost:3001/api/v1/posts/${postId}`);\n\n      // Cập nhật state để loại bỏ bài post đã xóa\n      const updatedNews = news.filter(item => item._id !== postId);\n      setNews(updatedNews);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this)\n  // <Grid container spacing={2} alignItems='stretch' justifyContent=\"center\">\n  //     {news.map((item) => (\n  //         <Grid item xs={12} sm={10} key={item.id} >\n  //             <Post \n  //                 key={item._id}\n  //                 newId = {item._id}\n  //                 title={item.title}\n  //                 image={item.image}\n  //                 content={item.content}\n  //                 author={item.author}\n  //                 onDelete={() => handleDeletePost(item.id)}  \n  //                 createdAt={moment(item.createdAt).format('YYYY-MM-DD')}\n  //             />\n  //         </Grid>\n  //     ))}\n  // </Grid>\n  ;\n}\n_s(PostList, \"z/85X+TkTtxCb0PBzmDGtQlYstQ=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Button","Grid","axios","Post","moment","jsxDEV","_jsxDEV","PostList","_s","news","setNews","fetchNews","response","get","data","error","console","handleDeletePost","postId","delete","updatedNews","filter","item","_id","scrollToTop","window","scrollTo","top","behavior","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dangnhat/Documents/NLCS1/BlogReact/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Post from './Post'; \nimport moment from 'moment';\n\nexport default function PostList() {\n    const [news, setNews] = useState([]);\n    \n\n    useEffect(() => {\n        async function fetchNews() {\n            try {\n                const response = await axios.get('http://localhost:3001/api/v1/news');\n                setNews(response.data.data.news);\n            } catch (error) {\n                console.error('Error fetching news:', error);\n            }\n        }\n\n        fetchNews();\n    }, []); \n\n    \n  const handleDeletePost = async (postId) => {\n    try {\n      // Gửi yêu cầu DELETE đến API endpoint để xóa bài post\n      await axios.delete(`http://localhost:3001/api/v1/posts/${postId}`);\n\n      // Cập nhật state để loại bỏ bài post đã xóa\n      const updatedNews = news.filter(item => item._id !== postId);\n      setNews(updatedNews);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    return (\n        <div>\n\n        </div>\n        // <Grid container spacing={2} alignItems='stretch' justifyContent=\"center\">\n        //     {news.map((item) => (\n        //         <Grid item xs={12} sm={10} key={item.id} >\n        //             <Post \n        //                 key={item._id}\n        //                 newId = {item._id}\n        //                 title={item.title}\n        //                 image={item.image}\n        //                 content={item.content}\n        //                 author={item.author}\n        //                 onDelete={() => handleDeletePost(item.id)}  \n        //                 createdAt={moment(item.createdAt).format('YYYY-MM-DD')}\n        //             />\n        //         </Grid>\n        //     ))}\n        // </Grid>\n        \n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,mBAAmB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGpCD,SAAS,CAAC,MAAM;IACZ,eAAea,SAASA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;QACrEH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACL,IAAI,CAAC;MACpC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ;IAEAJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAGR,MAAMM,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF;MACA,MAAMhB,KAAK,CAACiB,MAAM,CAAE,sCAAqCD,MAAO,EAAC,CAAC;;MAElE;MACA,MAAME,WAAW,GAAGX,IAAI,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAAC;MAC5DR,OAAO,CAACU,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC/C,CAAC;EAED,oBACItB,OAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAGR;AAACxB,EAAA,CAzDuBD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}